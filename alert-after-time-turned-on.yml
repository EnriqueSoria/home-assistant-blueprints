blueprint:
  name: Notification to turn off device after a specified time
  description: This blueprint allows you to set a timer to turn off a device (either a light or climate device) after a specified time, with notification and postponing options.
  domain: automation
  input:
    device:
      name: Device to control
      description: The device that should be turned off after some time.
      selector:
        entity:
          domain: 
            - light
            - climate
    trigger_state:
      name: State to trigger the timer
      description: The state change to trigger the timer (usually "on" for light or "heat" for climate).
      default: "on"
      selector:
        text:
    timer_duration:
      name: Timer Duration
      description: How long (in seconds) before the reminder is triggered.
      default: 180
      selector:
        number:
          min: 1
          max: 3600
          unit_of_measurement: seconds

  
trigger:
  - platform: state
    entity_id: !input 'device'
    to: !input 'trigger_state'

action:
  - repeat:
      sequence:
        - delay: 
            seconds: !input 'timer_duration'
        - data:
            message: >-
              ⚠️ The device has been running for more than {{ delay_seconds }} seconds.
              You can choose to turn it off or reset the timer.
            data:
              actions:
                - action: turn_off_device
                  title: Turn Off Device
                - action: postpone_reminder
                  title: Postpone reminder
          action: notify.notify
        - wait_for_trigger:
            - event_type: mobile_app_notification_action
              event_data:
                action: turn_off_device
              trigger: event
            - event_type: mobile_app_notification_action
              event_data:
                action: postpone_reminder
              trigger: event
          continue_on_timeout: false
        - if:
            - condition: template
              value_template: "{{ wait.trigger.event.data.action == 'turn_off_device' }}"
          then:
            - entity_id: !input 'device'
              action: homeassistant.turn_off
      until:
        - condition: device
          type: is_off
          device_id: !input 'device'
          entity_id: !input 'device'
          domain: !input 'device'
mode: restart
